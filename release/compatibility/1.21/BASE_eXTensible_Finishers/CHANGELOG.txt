===================================
BASE eXTensible Finishers Changelog
===================================

-----------------
v4.4.0 (16/06/04)
-----------------

Compatibility
-------------
- Now requires The Witcher 3: Wild Hunt Patch 1.21.

-----------------
v4.3.0 (16/01/16)
-----------------

Compatibility
-------------
- Now requires The Witcher 3: Wild Hunt Patch 1.12.

-----------------
v4.2.1 (16/01/10)
-----------------

Compatibility
-------------
- May not compatible with modules written using v4.2.0 or earlier of BASE eXTensible Finishers.

API
---
- XTFinishersActionContext.CountEnemiesNearPlayer() now has the option to exclude the victim of the current action from the count.

Bug Fixes
---------
- Fixed bug where XTFinishersActionContext.CountEnemiesNearPlayer() would not always return the correct value.

-----------------
v4.2.0 (15/11/04)
-----------------

API
---
- Added new events:
	- OnCamshake
	- OnFinisherEnd
	- OnFinisherPretrigger
	- OnDismemberPretrigger
	- OnCamshakePretrigger
- Use of XTFinishersCamShakeContext.forceOn and XTFinishersCamShakeContext.forceOff is now considered deprecated.
- Added new function XTFinishersActionContext.CountEnemiesNearPlayer().

-----------------
v4.1.1 (15/10/22)
-----------------

General
-------
- Updated to be compatible with Patch 1.11.

-----------------
v4.1.0 (15/10/21)
-----------------

API
---
- Added new enum types:
	- XTF_SLOWDOWN_TYPE_FATAL
	- XTF_CAMSHAKE_TYPE_FATAL

-----------------
v4.0.0 (15/10/14)
-----------------

General
-------
- ***IMPORTANT*** This version breaks backwards compatibility with the following versions of the default modules:
	- MODULE finisher_default v2.0.0 and older
	- MODULE dismember_default v2.0.0 and older
	- MODULE slowdown_default v2.0.0 and older
	- MODULE camshake_default v2.0.0 and older

API
---
- Added enums for finisher, dismember, slowdown, and camshake types.
- XTFinishersFinisherContext, XTFinishersDismemberContext, XTFinishersSlowdownContext, and XTFinishersCamShakeContext now use the new type enums.
- Added HasEffects() function for XTFinishersEffectsSnapshot.

Bug Fixes
---------
- Now correctly handles KNOCKDOWN finishers.

-----------------
v3.0.0 (15/10/09)
-----------------

General
-------
- ***IMPORTANT*** This version brings this mod up to date with Patch 1.10. It is not compatible with Patch 1.08 or any earlier game patches. It also breaks backward compatibility with the following versions of the default modules:
	- MODULE finisher_default v1.04 and older.
	- MODULE dismember_default v1.03 and older.
	
API
---
- Added field in XTFinishersFinisherContext and XTFinishersDismemberContext to track debug (console-enabled) finishers and dismemberments, respectively.

----------------
v2.03 (15/10/06)
----------------

General
-------
- ***IMPORTANT*** This version breaks backwards compatibility with the following versions of the default modules:
	- MODULE finisher_default v1.03 and older
	- MODULE dismember_default v1.02 and older
	- MODULE slowdown_default v1.02 and older
	- MODULE camshake_default v1.01 and older

API
---
- XTFinishersQueryManager and its associated classes are now considered deprecated.
- Vanilla module no longer uses the XTFinishersQueryManager API.
- Added const vars in XTFinishersConsts for finisher animation names.

----------------
v2.02 (15/10/01)
----------------

General
-------
- Moved script files for base code to content\scripts\local\base\
- Moved script files for vanilla module to content\scripts\local\vanilla\

API
---
- Most classes defined by eXTensible Finishers are now subclasses of XTFinishersObject.
- Changed XTFinishersActionContext's data type from struct to class. As a result, changes made to action contexts are now persistent without needing to be copied from stack to stack.
- Moved the constructors for the concrete subclasses of XTFinishersEventData out of XTFinishersEventManager. They are now global functions.
- Action contexts are now only loaded into thePlayer when context.finisher.active == true.
- Added constructors for XTFinishersSlowdownSession and XTFinishersSlowdownDelay.

Features
--------
- Added the ability to set which finisher animation gets played when a finisher is triggered.

Bug Fixes
---------
- Misc. minor bug fixes.

----------------
v2.01 (15/09/28)
----------------

Features
--------
- Added XTFinishersVanillaModule. This module recapitulates the behavior of the vanilla (un-modded) game when loaded. The BASE package now loads the vanilla module by default, so that if any of the default modules are not used and no custom modules are used in their place, the game will fall back to vanilla behavior for that part of the mod.

Bug Fixes
---------
- XTFinishersEventManager no longer incorrectly skips certain event listeners when FireEvent() is called.
- Other minor fixes.

----------------
v2.00 (15/09/26)
----------------

API
---
- Major refactor of underlying code. Most important changes include:
	- Functionality now segregated into discrete modules with no interdependencies.
	- Abstract classes are now actually abstract!
	- The new XTFinishersActionContext struct is now used universally across the API for passing combat action contexts to, from, and between listeners and responders.
	- XTFinishersEventManager now has a much more extensible API:
		- Enables support for arbitrary events using string IDs.
		- Enables support for passing arbitrary data to listeners using the XTFinishersEventData container class.
	- The base code now contains support for the following events:
		- OnActionStart
		- OnActionEnd
		- OnReactionStart
		- OnReactionEnd
		- OnFinisher
		- OnDismember
		- OnFinisherCam
		- OnSlowdownSequenceStart
		- OnSlowdownSequenceEnd
		- OnSlowdownSegmentStart
		- OnSlowdownSegmentEnd
	- XTFinishersAbstractSlowdownManager has been rewritten to use the XTFinishersSlowdownSequence and XTFinishersSlowdownSegment API. This makes creating slowdowns with an arbitrary number and combination of slowdown sessions and delays simpler and quicker, using a consistent API, and without the need to write additional custom code in r4Player.ws.
- Because of the extensive changes in the code base, this and future versions will not be backwards compatible with v1.00. Custom code written using the v1.00 API will need to be rewritten to be compatible with the new API.

Features
--------
- Mod code in existing script files now delimited with "// modXTFinishers BEGIN" and "// modXTFinishers END" to make identifying which lines were added/changed by the mod more obvious.

----------------
v1.00 (15/09/23)
----------------

Initial Release.