==============================
eXTensible Finishers Changelog
==============================

------------
Release 2.03
------------

Includes
--------
BASE		eXTensible Finishers		v2.02
MODULE		finisher_default			v1.03
MODULE		dismember_default			v1.02
MODULE		slowdown_default			v1.01
MODULE		camshake_default			v1.01

General
-------
- Segregated script files into subdirectories in content\scripts\local\

API
---
- BASE		eXTensible Finishers
	- Most classes defined by eXTensible Finishers are now subclasses of XTFinishersObject.
	- Changed XTFinishersActionContext's data type from struct to class. As a result, changes made to action contexts are now persistent without needing to be copied from stack to stack.
	- Moved the constructors for the concrete subclasses of XTFinishersEventData out of XTFinishersEventManager. They are now global functions.
	- Action contexts are now only loaded into thePlayer when context.finisher.active == true.
	- Added constructors for XTFinishersSlowdownSession and XTFinishersSlowdownDelay.
- MODULE	finisher_default
	- XTFinishersDefaultFinisherModule.Init() now uses protected functions to initialize individual module components.
- MODULE	dismember_default
	- XTFinishersDefaultDismemberModule.Init() now uses protected functions to initialize individual module components.
- MODULE	slowdown_default
	- XTFinishersDefaultSlowdownModule.Init() now uses protected functions to initialize individual module components.
	- XTFinishersDefaultSlowdownManager now uses protected functions to retrieve slowdown sequence definitions when a slowdown is triggered.
- MODULE	camshake_default
	- XTFinishersDefaultCamShakeModule.Init() now uses protected functions to initialize individual module components.

Features
--------
- BASE		eXTensible Finishers
	- Added the ability to set which finisher animation gets played when a finisher is triggered.
- MODULE	finisher_default
	- Added configuration options to choose which finisher animations are allowed to be played when a finisher is triggered.
- MODULE	slowdown_default
	- Added new configuration options for slowdowns on INSTANT-KILL finishers (previously INSTANT-KILL finishers were treated as REGULAR finishers).

Bug Fixes
---------
- BASE		eXTensible Finishers
	- Misc. minor bug fixes.
- MODULE	slowdown_default
	- Slowdowns will now correctly trigger on critical hits.

------------
Release 2.02
------------

Includes
--------
BASE		eXTensible Finishers		v2.01
MODULE		finisher_default			v1.02
MODULE		dismember_default			v1.01
MODULE		slowdown_default			v1.00
MODULE		camshake_default			v1.00

Features
--------
- BASE		eXTensible Finishers
	- Added XTFinishersVanillaModule. This module recapitulates the behavior of the vanilla (un-modded) game when loaded. The BASE package now loads the vanilla module by default, so that if any of the default modules are not used and no custom modules are used in their place, the game will fall back to vanilla behavior for that part of the mod.

Bug Fixes
---------
- BASE		eXTensible Finishers
	- XTFinishersEventManager no longer incorrectly skips certain event listeners when FireEvent() is called.
	- Other minor fixes.
- MODULE	finisher_default:
	- INSTANT-KILL finishers no longer always ignore aggro checks.

------------
Release 2.01
------------

Includes
--------
BASE		eXTensible Finishers		v2.00
MODULE		finisher_default			v1.01
MODULE		dismember_default			v1.01
MODULE		slowdown_default			v1.00
MODULE		camshake_default			v1.00


Bug Fixes
---------
- MODULE finisher_default:
	- Enemies with force finisher tags no longer always trigger INSTANT-KILL finishers.
- MODULE dismember_default:
	- DISMEMBER_AUTO_STRONG is now a mutually exclusive condition with DISMEMBER_AUTO_REND (Rend attacks used to be eligible for both conditions).
	- DISMEMBER_AUTO_FAST is now a mutually exclusive condition with DISMEMBER_AUTO_WHIRL (Whirl attacks used to be eligible for both conditions).

------------
Release 2.00
------------

Includes
--------
BASE		eXTensible Finishers		v2.00
MODULE		finisher_default			v1.00
MODULE		dismember_default			v1.00
MODULE		slowdown_default			v1.00
MODULE		camshake_default			v1.00

API
---
- Major refactor of underlying code. Most important changes include:
	- Functionality now segregated into discrete modules with no interdependencies.
	- Abstract classes are now actually abstract!
	- The new XTFinishersActionContext struct is now used universally across the API for passing combat action contexts to, from, and between listeners and responders.
	- XTFinishersEventManager now has a much more extensible API:
		- Enables support for arbitrary events using string IDs.
		- Enables support for passing arbitrary data to listeners using the XTFinishersEventData container class.
	- The base code now contains support for the following events:
		- OnActionStart
		- OnActionEnd
		- OnReactionStart
		- OnReactionEnd
		- OnFinisher
		- OnDismember
		- OnFinisherCam
		- OnSlowdownSequenceStart
		- OnSlowdownSequenceEnd
		- OnSlowdownSegmentStart
		- OnSlowdownSegmentEnd
	- XTFinishersAbstractSlowdownManager has been rewritten to use the XTFinishersSlowdownSequence and XTFinishersSlowdownSegment API. This makes creating slowdowns with an arbitrary number and combination of slowdown sessions and delays simpler and quicker, using a consistent API, and without the need to write additional custom code in r4Player.ws.
- Because of the extensive changes in the code base, this and future versions will not be backwards compatible with v1.00. Custom code written using the v1.00 API will need to be rewritten to be compatible with the new API.

Features
--------
- Mod code in existing script files now delimited with "// modXTFinishers BEGIN" and "// modXTFinishers END" to make identifying which lines were added/changed by the mod more obvious.
- Added support for triggering slowdowns on critical hits.
- Added expanded support for customizing camera-shake.

------------
Release 1.00
------------

Initial Release.